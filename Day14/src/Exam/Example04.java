package Exam;

public class Example04 {
	/*
	 * 추상클래스와 추상메소드
	 * -다형성을 위해 메소드의 선언은 통일해야하지만
	 * 실제로 구현하는 내용은 자식 클래스마다 달라야 할 때
	 * 부모클래스의 메소드는 비워두고 자식클래스에서 오버라이딩 하여
	 * 구현해 낼 수있다.
	 * 
	 * 추상메소드
	 * 선언부만 작성하고 구현부는 작성하지 않고 남겨둔 미완성 메소드
	 * 추상메소드를 선언 할 때는  abstract 키워드를 함께 표기해야 한다.
	 * 메소드 구현부인 중괄호 대신 구현부가 없다는 의미로 선언부를 끝내는
	 * 세미콜론을 사용한다.
	 * 하나 이상의 추상메소드를 선언하면 추상 클래스로 선언해야 된다
	 * 
	 * 형식)
	 * abstract void 메소드명();
	 * 
	 * 추상클래스
	 * 자바에서 하나이상의 추상 메소드를 포함하는 클래스를 가리켜 추상클래스라 한다.
	 * 추상클래스는 추상메소드를 포함한다는 것 이외에는 일반클래스와 같다.
	 * 추상클래스도 생성자와 멤버변수, 메소드를 가질 수 있다.
	 * 일반 클래스처럼 생성자 호출로 객체를 생성하지 못한다.
	 * 자식클래스의 생성자에서 super()를 통해 추상클래스의 
	 * 생성자를 호출하여 부모객체를 생성한 후 자식객체를 생성한다.
	 * 자식클래스에서 추상메소드를 반드시 오버라이딩 해야한다.
	 * 
	 * 형식)
	 * abstract class 클래스이름{
	 * 	필드, 생성자, 메소드(추상메소드 포함)
	 * }
	 * 
	 */
}
