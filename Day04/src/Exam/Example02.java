package Exam;

public class Example02 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*
		 * 비트연산자
		 * 압축할 때 = 데이터가 매우 큰 경우 
		 * 비트 단위로 연산한다.
		 * byte, short, char 타입을 비트연산하면 int 타입으로 자동변환되여 계산됨
		 * 비트: 0,1(이진수)값만 가질 수 있는 단위 
		 * 데이터 단위
		 * 8bit = 1 byte
		 *1kb = 1024 byte 
		 *1mb = 1024 kb
		 *1gb = 1024 mb
		 *1tb = 1024 gb
		 *
		 *장점: 처리속도가 빠르다 - 현재 컴퓨터 성능의 상승으로 잘 사용되지 않는 편
		 *십진법-이진법 변환법
		 *
		 *종류: ~,&,^,|,>>,<<
		 *&:논리곱 두 비트 모두 1일때 1
		 *|: 논리합 두비트중 하나가 1일 때 1
		 *^: 베타적 논리합 두비트가 다를때 1
		 *<<: 쉬프트 연산자 왼쪽으로 지정한 숫자만큼 비트이동
		 *>>: 쉬프트 연산자 오른쪽으로 지정한 숫자만큼 비트 이동
		 *
		 */
		int num1 = 15;
		int num2 = 20;
		int result1 = num1&num2;
		System.out.println(result1);
	// 00000000 00000000 00000000 00001111
	// 00000000 00000000 00000000 00010100
	// 00000000 00000000 00000000 00000100 = 4
		int result2 = num1|num2;
		System.out.println(result2);
		// 00000000 00000000 00000000 00001111
		// 00000000 00000000 00000000 00010100
		// 00000000 00000000 00000000 00011111 = 31
		int result3 = num1^num2;
		System.out.println(result3);
		// 00000000 00000000 00000000 00001111
		// 00000000 00000000 00000000 00010100
		// 00000000 00000000 00000000 00011011 = 27
		int result4 = num1<<2;
		System.out.println(result4);
		// 00000000 00000000 00000000 00001111
		// 00000000 00000000 00000000 00111100 = 60
		int result5 = num1>>2;
		System.out.println(result5);
		// 00000000 00000000 00000000 00001111
		// 00000000 00000000 00000000 00000011 = 3
		int result6 = ~num1;
		System.out.println(result6);
		// 00000000 00000000 00000000 00001111
		// 11111111 11111111 11111111 11110000 = 3
		

	
	}

	
}
